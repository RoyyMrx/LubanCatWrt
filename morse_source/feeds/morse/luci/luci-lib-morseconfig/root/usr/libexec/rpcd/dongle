#!/usr/bin/env lua

local json = require "luci.jsonc"
local http = require "luci.httpclient"

local methods = {
	request = {
		args = { uri = "http://10.42.0.1/ubus",  body = {}},
		call = function(args)
			local parse = json.new()
			local options={}
			options.headers = {}
			options.headers["Content-Type"] = "application/json"
			options.method = "POST"
			options.message= {}
			options.body = json.stringify(args.body):gsub("%[%]", "{}")
			local response, code, msg = http.request_to_buffer(args.uri, options)
			if not response then
				return { error = "Request failed with code "..code}
			end
			return response
		end
	},
}

local function parseInput()
	local parse = json.new()
	local done, err

	while true do
		local chunk = io.read(4096)
		if not chunk then
			break
		elseif not done and not err then
			done, err = parse:parse(chunk)
		end
	end

	if not done then
		print(json.stringify({ error = err or "Incomplete input" }))
		os.exit(1)
	end

	return parse:get()
end

local function validateArgs(func, uargs)
	local method = methods[func]
	if not method then
		print(json.stringify({ error = "Method not found" }))
		os.exit(1)
	end

	if type(uargs) ~= "table" then
		print(json.stringify({ error = "Invalid arguments" }))
		os.exit(1)
	end

	uargs.ubus_rpc_session = nil

	local k, v
	local margs = method.args or {}
	for k, v in pairs(uargs) do
		if margs[k] == nil or
		   (v ~= nil and type(v) ~= type(margs[k]))
		then
			print(json.stringify({ error = "Invalid arguments" }))
			os.exit(1)
		end
	end

	return method
end

if arg[1] == "list" then
	local _, method, rv = nil, nil, {}
	for _, method in pairs(methods) do rv[_] = method.args or {} end
	print((json.stringify(rv):gsub(":%[%]", ":{}")))
elseif arg[1] == "call" then
	local args = parseInput()
	local method = validateArgs(arg[2], args)
	local result, code = method.call(args)
	print(result)
	os.exit(code or 0)
elseif arg[1] == "call_direct" then
	local body = {id="0",method="call",jsonrpc="2.0",params={"00000000000000000000000000000000","session","login",{username="dongle",password="dongle"}}}
	local result, code = methods.request.call({uri = "http://10.0.0.67/ubus", body = body})
	print(result)
	os.exit(code or 0)
end


